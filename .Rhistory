res1 = extract_params_from_BioGeoBEARS_results_object(results_object=resDECj, returnwhat="table", addl_params=c("j"), paramsstr_digits=4)
rbind(res2, res1)
tmp_tests = conditional_format_table(stats)
restable = rbind(restable, res2, res1)
teststable = rbind(teststable, tmp_tests)
#########################################################################
# ASSEMBLE RESULTS TABLES: DEC, DEC+J, DIVALIKE, DIVALIKE+J, BAYAREALIKE, BAYAREALIKE+J
#########################################################################
teststable$alt = c("DEC+J")
teststable$null = c("DEC")
row.names(restable) = c("DEC", "DEC+J")
restable = put_jcol_after_ecol(restable)
#######################################################
# Model weights of all six models
#######################################################
restable2 = restable
# With AICs:
AICtable = calc_AIC_column(LnL_vals=restable$LnL, nparam_vals=restable$numparams)
restable = cbind(restable, AICtable)
restable_AIC_rellike = AkaikeWeights_on_summary_table(restable=restable, colname_to_use="AIC")
restable_AIC_rellike = put_jcol_after_ecol(restable_AIC_rellike)
restable_AIC_rellike
# With AICcs -- factors in sample size
tr <- read.tree(trfn)
samplesize = length(tr$tip.label)
AICtable = calc_AICc_column(LnL_vals=restable$LnL, nparam_vals=restable$numparams, samplesize=samplesize)
restable2 = cbind(restable2, AICtable)
restable_AICc_rellike = AkaikeWeights_on_summary_table(restable=restable2, colname_to_use="AICc")
restable_AICc_rellike = put_jcol_after_ecol(restable_AICc_rellike)
restable_AICc_rellike
list.results.BioGeoBears <- list(resDEC = resDEC,
resDECj = resDECj,
table_AIC = restable_AIC_rellike ,
table_AICc = restable_AICc_rellike)
result_birds <-  list.results.BioGeoBears$table_AICc %>%
dplyr::arrange(AICc) %>%
mutate(delta_AICc =  AICc - min(AICc))
save(resDECj, file =  "assemblage_age/resDECj_birds.RData")
cat("The best models are 'resDECj'")
write.csv2(result_birds,"result_biogeobears.csv")
# idade da comunidade
# converting numbers to character
biogeo_area <- data.frame(biogeo = chartr("12345", "ABCDE", evoregion_birds$site_region_birds))
# getting the ancestral range area for each node
node_area <-
Herodotools::get_node_range_BioGeoBEARS(
resDECj,
phyllip.file = "assemblage_age/geo_area_birds.data",
birds_phy_bio,
max.range.size = 3
)
# remove species in list of species
ncol(birds_list_phy) #695 spp
remove <- c("Crotophaga_major", "Crypturellus_parvirostris", "Turdus_leucomelas")
birds_list_biogeo <- birds_list_phy[,!(names(birds_list_phy)%in% remove)]
ncol(birds_list_biogeo) #692 spp
# calculating age arrival
age_comm <- Herodotools::calc_age_arrival(W = birds_list_biogeo,
tree = birds_phy_bio,
ancestral.area = node_area,
biogeo = biogeo_area)
log10(age_comm$mean_age_per_assemblage)
sites <- dplyr::bind_cols(coords, site_region =  evoregion_birds$site_region_birds, age = age_comm$mean_age_per_assemblage)
map_age <-
sites %>%
ggplot() +
ggplot2::geom_raster(ggplot2::aes(x = V1, y = V2, fill = log10(mean_age_arrival))) +
rcartocolor::scale_fill_carto_c(type = "quantitative",
palette = "SunsetDark",
direction = 1,
limits = c(0, 3.5),  ## max percent overall
breaks = seq(0, 3.5, by = .5),
labels = glue::glue("{seq(0, 3.5, by = 0.5)}")) +
ggplot2::geom_sf(data = coastline, size = 0.4) +
ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +
ggplot2::ggtitle("") +
ggplot2::theme_bw() +
ggplot2::labs(fill = "Mean age (Myr)") +
ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = "mm"),
direction = "horizontal",
ticks.colour = "grey20",
title.position = "top",
label.position = "bottom",
title.hjust = 0.5)) +
ggplot2::theme(
legend.position = "bottom",
axis.title = element_blank(),
legend.text = element_text(size = 10),
axis.text = element_text(size = 5),
plot.subtitle = element_text(hjust = 0.5)
)
map_age
# Save dataset
age_birds <- cbind(coords_id,sites[,3:4])
write.table(age_birds,"assemblage_age/age_birds.txt")
read.table('assemblage_age/age_birds.txt')
library(tidyverse) # data science tools
library(visdat) # missing data
library(phytools) #phylogenetic data
library(here) # set directory
library(picante) # diversification rate
library(conflicted) # resolve conflit in function 'select'
conflict_prefer("select", "dplyr")
# Composition matrix
# full list
full_list_amphibia <- read.table("full_data/list_amphibia.txt", h=T) # 519
full_list_amphibia <- full_list_amphibia[,-210]
full_list_squamata <- read.table("full_data/list_squamata.txt", h=T)
full_list_squamata <- full_list_squamata[,-1] # 402
full_list_birds <- read.table("full_data/list_birds.txt", h=T) # 815
full_list_mammals <- read.table("full_data/list_mammals.txt", h=T) # 236
full_list_mammals <- full_list_mammals[,-109] # 235 -col 'ID'
# harmonized data
harm_list_amphibia <- read.table("harmonized_data/list_amphibia.txt", h=T) # 421
harm_list_squamata <- read.table("harmonized_data/list_squamata.txt", h=T) # 263
harm_list_squamata <- harm_list_squamata[,-138] # remove column 'ID' # 262
harm_list_birds <- read.table("harmonized_data/list_birds.txt", h=T) # 638
harm_list_mammals <- read.table("harmonized_data/list_mammals.txt", h=T) # 166
# traits
# full list
full_traits_amphibia <- read.csv2("full_data/trait_amphibia.txt", sep=" ")
full_traits_squamata <- read.csv2("full_data/trait_squamata.txt", sep=" ")
full_traits_birds <- read.csv2("full_data/trait_birds.txt", sep=" ")
full_traits_mammals <- read.csv2("full_data/trait_mammals.txt", sep=" ")
# harmonized data
harm_traits_amphibia <- read.csv2("harmonized_data/trait_amphibia.txt", sep=" ")
harm_traits_squamata <- read.csv2("harmonized_data/trait_squamata.txt")
harm_traits_birds <- read.csv2("harmonized_data/trait_birds.txt", sep=" ")
harm_traits_mammals <- read.csv2("harmonized_data/trait_mammals.txt", sep=" ")
# phylogeny
# full list
full_phy_amphibia <- read.tree("full_data/amphibia.tre") #487
full_phy_squamata <- read.tree("full_data/squamata.tre") #382
full_phy_birds <- read.tree("full_data/birds.tre") #695
full_phy_mammals <- read.tree("full_data/mammals.tre") #196
# harmonized data
harm_phy_amphibia <- read.tree("harmonized_data/amphibia.tre") # 421
harm_phy_squamata <- read.tree("harmonized_data/squamata.tre") # 262
harm_phy_birds <- read.tree("harmonized_data/birds.tre") # 638
harm_phy_mammals <- read.tree("harmonized_data/mammals.tre") # 166
# Assemblage age
# full list
full_aa_amphibia <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_amphibia.txt')#487
full_aa_squamata <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_squamata.txt')#382
full_aa_birds <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_birds.txt')#695
full_aa_mammals <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_mammals.txt')#196
# harmonized data
harm_aa_amphibia <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_amphibia_harm.txt')#421
harm_aa_squamata <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_squamata_harm.txt')#262
harm_aa_birds <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_birds_harm.txt') #638
harm_aa_mammals <- read.table('/repos/biogeo_vertebrates-main/assemblage_age/age_mammals_harm.txt') #166
# climate data
abiotic_data <- read.table("abiotic_data.txt")
View(harm_list_squamata)
View(harm_traits_squamata)
harm_traits_squamata
harm_traits_squamata <- read.csv2("harmonized_data/trait_squamata.txt", sep= " ")
View(harm_traits_squamata)
amphibia_full_traits <- read.csv2("trait_data/traits_amphibia.csv")
squamata_full_traits <- read.csv2("trait_data/traits_squamatas.csv", sep=";")
birds_full_traits <- read.csv2("trait_data/traits_birds.csv", sep=";")
mammals_full_traits <- read.csv2("trait_data/traits_mammals.csv", sep=";")
squamata_full_list
squamata_full_traits
squamata_full_phy
names(squamata_full_list) <- gsub(".", "_", fixed=T, names(squamata_full_list))
#Transformando variável character em integer
squamata_full_traits$Fossorial <- as.integer(as.character(squamata_full_traits$Fossorial))
# Traits
names(squamata_full_traits)
#vis_miss(squamata_full_traits) #24.8% missing data
rem.col.rep <- c("litter_or_clutch_size_n","litters_or_clutches_per_y", "range_m2") #remover essas colunas
short.squamata.traits <- squamata_full_traits[,!(names(squamata_full_traits)%in% rem.col.rep)]
#vis_miss(short_squamata_traits)
# Removendo missing data
short_squamata_traits <- remove_missing(short.squamata.traits, vars=names(short.squamata.traits))
vis_miss(short_squamata_traits) #0.0% - 134 spp saíram
# Lista para join
# Arrumando para linhas
reptile_list <- squamata_full_list %>%
gather(key="sp",value="count", Acanthochelys_radiolata:Xenopholis_undulatus) %>% distinct(sp, .keep_all = TRUE)
# Anti join: espécies que estão no x, mas não estão no y (x,y)
reptiles_sp <- anti_join(reptile_list, short_squamata_traits, by="sp")
#Retirando espécies que saíram nos traits
rem.col.list <- reptiles_sp$sp
short_squamata_list <- squamata_full_list[,!(names(squamata_full_list)%in% rem.col.list)]
ncol(short_squamata_list) #262 without id
nrow(short_squamata_traits) #277
reptiles_sp2 <- anti_join(short_squamata_traits, reptile_list, by="sp")
# remove by vector
short_squamata_traits <- short_squamata_traits[!(short_squamata_traits$sp %in% reptiles_sp2$sp), ]
#ncol(short_squamata_list) #262sp - +id
#nrow(short_squamata_traits) #262spp
#Ordem alfabética lista
short_squamata_list <- short_squamata_list[ , order(names(short_squamata_list))]
#Ordem alfabética traits
short_squamata_traits <- short_squamata_traits[order(short_squamata_traits$sp),]
# Harmonized dataset
squamata_phy # 262 spp
ncol(short_squamata_list) #262 spp - +id
nrow(short_squamata_traits) #262spp
# Non harmonized dataset
full_squamata_phy <- prune.sample(squamata_full_list,squamata_full_phy) # 403 spp
write.table(short_squamata_traits, "02_metrics/harmonized_data/trait_squamata.txt")#262spp
write.table(short_squamata_traits, "02_metrics/harmonized_data/trait_squamata.txt")
harm_traits_squamata <- read.csv2("harmonized_data/trait_squamata.txt", sep= " ")
View(harm_traits_squamata)
harm_traits_squamata[68,]
harm_traits_squamata[69,]
harm_traits_squamata[69,2]
harm_traits_squamata[69,2] == 69.2
harm_traits_squamata[69,2] = 69.2
head(harm_traits_squamata[69,2])
# Copy dataset
harm_traits_squamata[69,2] <- 69.2
short_squamata_traits <- harm_traits_squamata
# check error name
colnames(harm_list_squamata) == short_squamata_traits$sp
# circadian activity
atividade.reptile <- short_squamata_traits %>%
select(sp, diurnal, nocturnal) %>%
mutate_at(vars(2:3), list(~replace(., is.na(.), 0)))
atividade.reptile <- as.tibble(atividade.reptile)
atividade.reptile <- column_to_rownames(as.data.frame(atividade.reptile),var = "sp")
dist_ativ_reptile <- prep.binary(atividade.reptile, col.blocks = 2, labels = "atividade_circadiana")
library(FD)
library(tidyverse) # data science tools
library(visdat) # missing data
library(phytools) #phylogenetic data
library(here) # set directory
library(picante) # diversification rate
library(FD) # fdis
library(conflicted) # resolve conflit in function 'select'
conflict_prefer("select", "dplyr")
# Copy dataset
# adjustements in number
harm_traits_squamata[69,2] <- 69.2
short_squamata_traits <- harm_traits_squamata
# check error name
colnames(harm_list_squamata) == short_squamata_traits$sp
# circadian activity
atividade.reptile <- short_squamata_traits %>%
select(sp, diurnal, nocturnal) %>%
mutate_at(vars(2:3), list(~replace(., is.na(.), 0)))
atividade.reptile <- as.tibble(atividade.reptile)
atividade.reptile <- column_to_rownames(as.data.frame(atividade.reptile),var = "sp")
dist_ativ_reptile <- prep.binary(atividade.reptile, col.blocks = 2, labels = "atividade_circadiana")
# habitat
names(short_squamata_traits)
habitat.reptile <- short_squamata_traits %>%
select(sp, Terrestre, Arboricola, Fossorial, Aquatica) %>%
mutate_at(vars(2:5), list(~replace(., is.na(.), 0)))
habitat.reptile <- as.tibble(habitat.reptile)
habitat.reptile <- column_to_rownames(as.data.frame(habitat.reptile), var = "sp")
dist_habitat_reptile <- prep.binary(habitat.reptile, col.blocks = 4, labels = "habitat")
# Thu Apr 01 17:28:40 2021 ------------------------------
# Transformando para numeric traitss
head(short_squamata_traits)
sum(is.na(short_squamata_traits$"SVL..mm.")) # 0 NA's
View(short_squamata_traits)
short_squamata_traits <- short_squamata_traits %>%
mutate_at("SVL..mm.", list(as.numeric))
# Thu Apr 01 17:28:40 2021 ------------------------------
# Transformando para numeric traitss
head(short_squamata_traits)
sum(is.na(short_squamata_traits$"SVL..mm.")) # 0 NA's
short_squamata_traits
names(short_squamata_traits)
# Thu Apr 01 17:28:40 2021 ------------------------------
# Transformando para numeric traitss
head(short_squamata_traits)
sum(is.na(short_squamata_traits$svl_mm)) # 0 NA's
short_squamata_traits <- short_squamata_traits %>%
mutate_at(svl_mm, list(as.numeric))
short_squamata_traits <- short_squamata_traits %>%
mutate_at("svl_mm", list(as.numeric))
bodysize.reptile <- data.frame(BodySize=log(short_squamata_traits$SVL..mm.))
bodysize.reptile <- data.frame(BodySize=log(short_squamata_traits$svl_mm))
rownames(bodysize.reptile) <- short_squamata_traits$sp
head(bodysize.reptile) #ok
nrow(bodysize.reptile) #261
bodysize.reptile
#Now, let's finally calculate the pair-wise trait distance matrix using the Gower distance coefficient as implemented in the package `ade4'
trait.dist.reptile <- dist.ktab(ktab.list.df(list(dist_ativ_reptile, dist_habitat_reptile, as.data.frame(bodysize.reptile))), type = c("B","B","Q"), scan=TRUE)
#10 = S2 coefficient of GOWER & LEGENDRE for multi-choice traits
#1 = Euclidean for quantitative traits
is.euclid(trait.dist.reptile)#True!
sum(as.matrix(is.na(trait.dist.reptile)))#no NAs :)
#Calculando FDisp
disp.func.reptile <- fdisp(trait.dist.reptile, as.matrix(harm_list_squamata))
FDis_metric_reptiles <- data.frame(id=harm_aa_squamata$id, FDis=disp.func.reptile$FDis)
# full
full_rich_amphibia <- full_list_amphibia %>%
mutate_at(c(names(full_list_amphibia)), as.numeric) %>%
mutate(richness = rowSums(full_list_amphibia))
# harmonized
harm_rich_amphibia <- harm_list_amphibia %>%
mutate_at(c(names(harm_list_amphibia)), as.numeric) %>%
mutate(richness = rowSums(harm_list_amphibia))
# full
full_rich_squamata <- full_list_squamata %>%
mutate_at(c(names(full_list_squamata)), as.numeric) %>%
mutate(richness = rowSums(full_list_squamata))
# harmonized
harm_rich_squamata <- harm_list_squamata %>%
mutate_at(c(names(harm_list_squamata)), as.numeric) %>%
mutate(richness = rowSums(harm_list_squamata))
# full
full_rich_birds <- full_list_birds %>%
mutate_at(c(names(full_list_birds)), as.numeric) %>%
mutate(richness = rowSums(full_list_birds))
# harmonized
harm_rich_birds <- harm_list_birds %>%
mutate_at(c(names(harm_list_birds)), as.numeric) %>%
mutate(richness = rowSums(harm_list_birds))
# full
full_rich_mammals <- full_list_mammals %>%
mutate_at(c(names(full_list_mammals)), as.numeric) %>%
mutate(richness = rowSums(full_list_mammals))
# harmonized
harm_rich_mammals <- harm_list_mammals %>%
mutate_at(c(names(harm_list_mammals)), as.numeric) %>%
mutate(richness = rowSums(harm_list_mammals))
# adjustments
names(full_list_amphibia) <- gsub("Scinax_v.signatus", "Scinax_v-signatus", fixed=T, names(full_list_amphibia))
names(full_list_amphibia) <- gsub("Scinax_x.signatus", "Scinax_x-signatus", fixed=T, names(full_list_amphibia))
#match.phylo.comm(full_phy_amphibia,full_list_amphibia)
remove.col.amp <- c("Bokermannohyla_izecksohni","Brachycephalus_sulfuratus","Chiasmocleis_cordeiroi","Chiasmocleis_crucis","Crossodactylus_bokermanni","Crossodactylus_fransciscanus","Crossodactylus_timbuhy","Dendropsophus_baileyi","Dendropsophus_bromeliaceus","Eleutherodactylus_bilineatus","Holoaden_pholeter","Melanophryniscus_milanoi","Melanophryniscus_xanthostomus","Scinax_strigilatus","Phyllodytes_megatympanum","Proceratophrys_fryi","Proceratophrys_mantiqueira","Proceratophrys_moratoi","Proceratophrys_phyllostoma","Proceratophrys_pombali","Pseudopaludicola_atragula","Pseudopaludicola_pocoto","Scinax_caissara","Scinax_canastrensis","Scinax_centralis","Scinax_kautskyi","Scinax_melanodactylus","Scinax_rossaferesae","Scinax_skuki","Trachycephalus_typhonius","Vitreorana_baliomma")
list_amphibia_dr <- full_list_amphibia[,!(names(full_list_amphibia)%in% remove.col.amp)]
# full tree
# 487 spp
full_dr_amphibia <- evol.distinct(full_phy_amphibia, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
full_dr_amphibia$w <- 1/full_dr_amphibia$w #equal split inverse
#Selencionando DR amphibia
full_dr <- full_dr_amphibia %>% select(w)
full_dr <- full_dr %>% as.matrix(full_dr)
#Transformando amphibia_list em matrix
amphibia_full_matrix <- as.matrix(list_amphibia_dr)
dim(amphibia_full_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
full_amphibia_dr <- amphibia_full_matrix%*% full_dr
# Plotando DR
#amp.dr <- cbind(mean_DR_amphi,grid_ma$id)
#amp.dr <- as.data.frame(amp.dr)
# Agrupando identificação da célula e o valor DR
#dr_amphibia <- data.frame(id=grid_ma$id, DR=amp.dr$w)
#dr_amphibia
#hist(dr_amphibia$DR,col = "gray50",border = "gray",main = "Anura",xlab = "Diversification rate",ylab = "Frequency",br = 50)
###---
# harmonized tree
# 421 spp
harm_dr_amphibia <- evol.distinct(harm_phy_amphibia, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
harm_dr_amphibia$w <- 1/harm_dr_amphibia$w #equal split inverse
#Selencionando DR amphibia
harm_dr <- harm_dr_amphibia %>% select(w)
harm_dr <- harm_dr %>% as.matrix(harm_dr)
#Transformando amphibia_list em matrix
amphibia_harm_matrix <- as.matrix(harm_list_amphibia)
dim(amphibia_harm_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
harm_amphibia_dr <- amphibia_harm_matrix%*% harm_dr
# adjustments
names(full_list_squamata) <- gsub(".", "_", fixed=T, names(full_list_squamata))
#match.phylo.comm(full_phy_squamata,full_list_squamata)
remove.col.squa <- c("Acanthochelys_radiolata","Acanthochelys_spixii","Caiman_crocodilus","Caiman_latirostris","Caiman_yacare","Chelonoidis_carbonaria","Chelonoidis_denticulata","Hydromedusa_maximiliani","Hydromedusa_tectifera","Kinosternon_scorpioides","Mesoclemmys_hogei","Mesoclemmys_tuberculata","Mesoclemmys_vanderhaegei","Paleosuchus_palpebrosus","Phrynops_geoffroanus","Phrynops_hilarii","Phrynops_tuberosus","Phrynops_williamsi","Trachemys_dorbigni","Tropidurus_imbituba")
list_squamata_dr <- full_list_squamata[,!(names(full_list_squamata)%in% remove.col.squa)]
# full tree
# 487 spp
full_dr_squamata <- evol.distinct(full_phy_squamata, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
full_dr_squamata$w <- 1/full_dr_squamata$w #equal split inverse
#Selencionando DR amphibia
full_dr_squa <- full_dr_squamata %>% select(w)
full_dr_squa <- full_dr_squa %>% as.matrix(full_dr_squa)
#Transformando amphibia_list em matrix
squamata_full_matrix <- as.matrix(list_squamata_dr)
dim(squamata_full_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
full_squamata_dr <- squamata_full_matrix %*% full_dr_squa
# Plotando DR
#amp.dr <- cbind(mean_DR_amphi,grid_ma$id)
#amp.dr <- as.data.frame(amp.dr)
# Agrupando identificação da célula e o valor DR
#dr_amphibia <- data.frame(id=grid_ma$id, DR=amp.dr$w)
#dr_amphibia
#hist(dr_amphibia$DR,col = "gray50",border = "gray",main = "Anura",xlab = "Diversification rate",ylab = "Frequency",br = 50)
###---
# harmonized tree
# 421 spp
harm_dr_squamata <- evol.distinct(harm_phy_squamata, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
harm_dr_squamata$w <- 1/harm_dr_squamata$w #equal split inverse
#Selencionando DR amphibia
harm_dr_squa <- harm_dr_squamata %>% select(w)
harm_dr_squa <- harm_dr_squa %>% as.matrix(harm_dr_squa)
#Transformando amphibia_list em matrix
squamata_harm_matrix <- as.matrix(harm_list_squamata)
dim(squamata_harm_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
harm_squamata_dr <- squamata_harm_matrix%*% harm_dr_squa
# adjustments
#match.phylo.comm(full_phy_birds,full_list_birds)
remove.col.birds <- c("Agelaioides_fringillarius","Amazilia_sapphirina","Anabacerthia_lichtensteini" ,"Anodorhynchus_glaucus","Antrostomus_rufus","Antrostomus_sericocaudatus","Anumara_forbesi","Aramides_cajaneus","Asemospiza_fuliginosa","Asthenes_moreirae","Atticora_tibialis","Automolus_lammi","Basileuterus_auricapilla","Buteogallus_coronatus","Buteogallus_lacernulatus","Calidris_subruficollis" ,"Cantorchilus_leucotis","Cantorchilus_longirostris","Castanozoster_thoracicus","Celeus_galeatus","Celeus_ochraceus","Celeus_tinnunculus","Ceratopipra_rubrocapilla","Cercomacroides_laeta","Chlorostilbon_notatus","Chordeiles_nacunda","Ciccaba_huhula","Ciccaba_virgata","Cichlocolaptes_holti","Cichlocolaptes_mazarbarnetti","Clibanornis_rectirostris","Colaptes_campestroides","Cyanocorax_coeruleus" ,"Cyanoloxia_brissonii","Diopsittaca_cumanensis","Elaenia_sordida","Eupsittula_aurea","Eupsittula_cactorum","Formicivora_acutirostris","Formicivora_paludicola","Geranoaetus_albicaudatus","Griseotyrannus_aurantioatrocristatus","Guyramemua_affinis","Herpsilochmus_scapularis","Hirundinea_bellicosa","Hoploxypterus_cayanus","Hydropsalis_maculicaudus","Icterus_pyrrhopterus","Islerothraupis_cristata","Leistes_superciliaris","Lipaugus_ater","Lipaugus_conditus","Mareca_sibilatrix","Microspingus_cabanisi","Microspingus_cinereus","Microspingus_lateralis","Myiodynastes_solitarius","Myiothlypis_flaveola","Myiothlypis_leucoblephara","Myiothlypis_leucophrys","Myiothlypis_rivularis","Myrmoderus_loricatus","Myrmoderus_ruficauda","Myrmoderus_squamosus","Nycticryphes_semicollaris","Nyctipolus_hirundinaceus","Ortalis_araucuan","Ortalis_squamata","Orthopsittaca_manilatus","Parabuteo_leucorrhous","Paraclaravis_geoffroyi","Phalcoboenus_chimango","Pheugopedius_genibarbis","Philohydor_lictor","Pionus_reichenowi","Pipraeidea_bonariensis","Pogonotriccus_eximius","Porphyriops_melanops","Pseudastur_polionotus","Pseudopipra_pipra","Psittacara_acuticaudatus","Psittacara_leucophthalmus","Pygochelidon_melanoleuca","Ramphastos_ariel","Ramphastos_culminatus","Rhopias_gularis","Rufirallus_viridis","Rupornis_magnirostris","Sarkidiornis_sylvicola","Sclerurus_cearensis","Scytalopus_gonzagai","Scytalopus_petrophilus","Serpophaga_griseicapilla","Setopagis_parvula","Spatula_platalea","Spatula_versicolor","Spinus_magellanicus","Spinus_yarrellii","Sporophila_angolensis","Sporophila_beltoni","Sporophila_maximiliani","Sporophila_pileata","Stephanoxis_loddigesii","Sternula_superciliaris","Stigmatura_bahiae","Synallaxis_cinerea","Synallaxis_hellmayri","Systellura_longirostris","Tangara_brasiliensis","Tangara_cyanomelas","Tangara_flava","Tangara_ornata","Tangara_palmarum","Tangara_sayaca","Thlypopsis_pyrrhocoma","Tityra_braziliensis","Trogon_aurantius","Vireo_chivi","Xenops_rutilus","Xiphorhynchus_atlanticus")
list_birds_dr <- full_list_birds[,!(names(full_list_birds)%in% remove.col.birds)]
# full tree
# 487 spp
full_dr_birds <- evol.distinct(full_phy_birds, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
full_dr_birds$w <- 1/full_dr_birds$w #equal split inverse
#Selencionando DR amphibia
full_dr_birds <- full_dr_birds %>% select(w)
full_dr_birds <- full_dr_birds %>% as.matrix(full_dr_birds)
#Transformando amphibia_list em matrix
birds_full_matrix <- as.matrix(list_birds_dr)
dim(birds_full_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
full_birds_dr <- birds_full_matrix %*% full_dr_birds
# Plotando DR
#amp.dr <- cbind(mean_DR_amphi,grid_ma$id)
#amp.dr <- as.data.frame(amp.dr)
# Agrupando identificação da célula e o valor DR
#dr_amphibia <- data.frame(id=grid_ma$id, DR=amp.dr$w)
#dr_amphibia
#hist(dr_amphibia$DR,col = "gray50",border = "gray",main = "Anura",xlab = "Diversification rate",ylab = "Frequency",br = 50)
###---
# harmonized tree
# 421 spp
harm_dr_birds <- evol.distinct(harm_phy_birds, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
harm_dr_birds$w <- 1/harm_dr_birds$w #equal split inverse
#Selencionando DR amphibia
harm_dr_birds <- harm_dr_birds %>% select(w)
harm_dr_birds <- harm_dr_birds %>% as.matrix(harm_dr_birds)
#Transformando amphibia_list em matrix
birds_harm_matrix <- as.matrix(harm_list_birds)
dim(birds_harm_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
harm_birds_dr <- birds_harm_matrix%*% harm_dr_birds
# adjustments
#match.phylo.comm(full_phy_mammals,full_list_mammals)
remove.col.mammals <- c("Abrawayaomys_chebezi","Abrawayaomys_ruschii","Akodon_sanctipaulensis","Brucepattersonius_griserufescens","Brucepattersonius_guarani","Brucepattersonius_misionensis","Brucepattersonius_paradisus","Cabassous_tatouay","Callicebus_barbarabrownae","Callicebus_melanochir","Callithrix_flaviceps","Dasyprocta_iacki","Dasyprocta_prymnolopha","Dasypus_hybridus","Dasypus_septemcinctus","Graomys_chacoensis","Hylaeamys_oniscus","Leontopithecus_caissara","Leontopithecus_chrysopygus","Leopardus_geoffroyi","Leopardus_guttulus","Marmosa_paraguayana","Monodelphis_unistriata","Nectomys_rattus","Oxymycterus_angularis","Oxymycterus_caparoae","Oxymycterus_hispidus","Oxymycterus_roberti","Phaenomys_ferrugineus","Phyllomys_kerri","Phyllomys_medius","Phyllomys_thomasi","Phyllomys_unicolor","Reithrodon_typicus","Sapajus_cay","Sylvilagus_tapetillus","Tolypeutes_tricinctus","Trinomys_mirapitanga","Wilfredomys_oenax")
list_mammals_dr <- full_list_mammals[,!(names(full_list_mammals)%in% remove.col.mammals)]
# full tree
# 487 spp
full_dr_mammals <- evol.distinct(full_phy_mammals, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
full_dr_mammals$w <- 1/full_dr_mammals$w #equal split inverse
#Selencionando DR amphibia
full_dr_mammals <- full_dr_mammals %>% select(w)
full_dr_mammals <- full_dr_mammals %>% as.matrix(full_dr_mammals)
#Transformando amphibia_list em matrix
mammals_full_matrix <- as.matrix(list_mammals_dr)
dim(mammals_full_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
full_mammals_dr <- mammals_full_matrix %*% full_dr_mammals
# Plotando DR
#amp.dr <- cbind(mean_DR_amphi,grid_ma$id)
#amp.dr <- as.data.frame(amp.dr)
# Agrupando identificação da célula e o valor DR
#dr_amphibia <- data.frame(id=grid_ma$id, DR=amp.dr$w)
#dr_amphibia
#hist(dr_amphibia$DR,col = "gray50",border = "gray",main = "Anura",xlab = "Diversification rate",ylab = "Frequency",br = 50)
###---
# harmonized tree
# 421 spp
harm_dr_mammals <- evol.distinct(harm_phy_mammals, type = "equal.splits", scale = FALSE, use.branch.lengths = TRUE)
harm_dr_mammals$w <- 1/harm_dr_mammals$w #equal split inverse
#Selencionando DR amphibia
harm_dr_mammals <- harm_dr_mammals %>% select(w)
harm_dr_mammals <- harm_dr_mammals %>% as.matrix(harm_dr_mammals)
#Transformando amphibia_list em matrix
mammals_harm_matrix <- as.matrix(harm_list_mammals)
dim(mammals_harm_matrix)
# Multiplicando matrizes para obter a média DR para cada célula do grid
harm_mammals_dr <- mammals_harm_matrix%*% harm_dr_mammals
harm_rich_amphibia
full_rich_amphibia
harm_rich_amphibia$richness
full_rich_amphibia$richness
my_data = cbind(full = full_rich_amphibia$richness, harm = harm_rich_amphibia$richness)
my_data
ggscatter(my_data, x = "full", y = "harm",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "full dataset", ylab = "harmonized dataset")
library("ggpubr")
install.packages("ggpubr")
library("ggpubr")
ggscatter(my_data, x = "full", y = "harm",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "full dataset", ylab = "harmonized dataset")
ggscatter(my_data, x = full, y = harm,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "full dataset", ylab = "harmonized dataset")
my_data
ggscatter(my_data, x = "full", y = "harm",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "full dataset", ylab = "harmonized dataset")
cor()
cor(full_rich_amphibia$richness,harm_rich_amphibia$richness)
cor(full_rich_amphibia$richness,harm_rich_amphibia$richness,method="pearson")
cor(full_rich_squamata$richness,harm_rich_squamata$richness,method="pearson")
cor(full_rich_birds$richness,harm_rich_birds$richness,method="pearson")
cor(full_rich_mammals$richness,harm_rich_mammals$richness,method="pearson")
harm_amphibia_dr
full_amphibia_dr
cor(harm_amphibia_dr,full_amphibia_dr)
cor(harm_squamata_dr,full_squamata_dr)
cor(harm_birds_dr,full_birds_dr)
cor(harm_mammals_dr,full_mammals_dr)
cor(harm_aa_amphibia$mean_age_arrival,full_aa_amphibia$mean_age_arrival)
cor(harm_aa_birds$mean_age_arrival,full_aa_birds$mean_age_arrival)
cor(harm_aa_squamata$mean_age_arrival,full_aa_squamata$mean_age_arrival)
cor(harm_aa_mammals$mean_age_arrival,full_aa_mammals$mean_age_arrival)
